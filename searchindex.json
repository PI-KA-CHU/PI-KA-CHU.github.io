{"categories":[{"title":"syntax","uri":"https://PI-KA-CHU.github.io/categories/syntax/"},{"title":"themes","uri":"https://PI-KA-CHU.github.io/categories/themes/"}],"posts":[{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don't communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables Tables aren't part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo's internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike's talk during Gopherfest, November 18, 2015.\u0026#8617;\n  ","id":0,"section":"posts","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"https://PI-KA-CHU.github.io/2019/03/markdown-syntax/","year":"2019"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","id":1,"section":"posts","summary":"\u003cp\u003eLorem est tota propiore conpellat pectoribus de\npectora summo.\u003c/p\u003e","tags":["markdown","text"],"title":"Placeholder Text","uri":"https://PI-KA-CHU.github.io/2019/03/placeholder-text/","year":"2019"},{"content":"SpringBoot整合redis redis单机版 写在前面  选中代码块，按control + alt + t：快捷tryCatch 选中类名，按control + shift + t：快捷创建Junit Test  redis连接的准备工作  如果是阿里云购买的服务器的话，需要开放redis的启动端口，默认端口为6379 打开redis根目录下的redis.conf文件，将bind 127.0.0.1注释掉，即改为# bind 127.0.0.1，否则只能进行本地连接，从而报异常 找到redis.conf文件中的protected-mode yes，将其改为protected-mode no，关闭保护模式，否则会报连接被终止的异常 重启redis，重启的使用应携带conf文件进行重启，在redis的src文件下执行./redis-server ../redis.conf重启redis，直接重启配置文件并不会生效  redis相关配置  依赖包引入  \u0026lt;!-- 引入redis依赖 --\u0026gt;\r\u0026lt;dependency\u0026gt;\r\u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt;\r\u0026lt;artifactId\u0026gt;spring-boot-starter-data-redis\u0026lt;/artifactId\u0026gt;\r\u0026lt;/dependency\u0026gt;\r\u0026lt;!-- redis依赖commons-pool 这个依赖一定要添加 --\u0026gt;\r\u0026lt;dependency\u0026gt;\r\u0026lt;groupId\u0026gt;org.apache.commons\u0026lt;/groupId\u0026gt;\r\u0026lt;artifactId\u0026gt;commons-pool2\u0026lt;/artifactId\u0026gt;\r\u0026lt;/dependency\u0026gt;\r 配置springBoot的配置文件（application.properties或application.yml），此处配置的是application.properties  # redis相关配置\r# redis数据库索引\rspring.redis.database=0\r# redis服务器地址\rspring.redis.host=120.78.151.65\r# redis服务器连接端口\rspring.redis.port=6379\r# redis服务器连接密码\rspring.redis.password=\r# 连接池最大连接数（负值表示没有限制）\rspring.redis.lettuce.pool.max-active=8\r# 连接池最大阻塞等待时间（负值表示无限制）\rspring.redis.jedis.pool.max-wait=-1\r# 连接池中的最大空闲连接\rspring.redis.lettuce.pool.max-idle=8\r# 连接池中的最小空闲连接\rspring.redis.lettuce.pool.min-idle=0\r# 连接超时时间（毫秒）\rspring.redis.timeout=5000\r 创建RedisConfig.java文件，配置自定义redisTemplate，解决因默认序列化JdkSerializationRedisSerializer导致的字符显示不正常的问题。  import com.fasterxml.jackson.annotation.JsonAutoDetect;\rimport com.fasterxml.jackson.annotation.PropertyAccessor;\rimport com.fasterxml.jackson.databind.ObjectMapper;\rimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\rimport org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration;\rimport org.springframework.context.annotation.Bean;\rimport org.springframework.context.annotation.Configuration;\rimport org.springframework.data.redis.connection.RedisConnectionFactory;\rimport org.springframework.data.redis.core.RedisTemplate;\rimport org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;\rimport org.springframework.data.redis.serializer.StringRedisSerializer;\r@Configuration\r@AutoConfigureAfter(RedisAutoConfiguration.class)\rpublic class RedisConfig {\r/**\r* 配置自定义redisTemplate\r* @return\r*/\r@Bean\rpublic RedisTemplate\u0026lt;String, Object\u0026gt; redisTemplate(RedisConnectionFactory redisConnectionFactory) {\rRedisTemplate\u0026lt;String, Object\u0026gt; template = new RedisTemplate\u0026lt;\u0026gt;();\rtemplate.setConnectionFactory(redisConnectionFactory);\r//使用Jackson2JsonRedisSerializer来序列化和反序列化redis的value值\rJackson2JsonRedisSerializer serializer = new Jackson2JsonRedisSerializer(Object.class);\rObjectMapper mapper = new ObjectMapper();\rmapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);\rmapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);\rserializer.setObjectMapper(mapper);\rtemplate.setValueSerializer(serializer);\r//使用StringRedisSerializer来序列化和反序列化redis的key值\rtemplate.setKeySerializer(new StringRedisSerializer());\rtemplate.setHashKeySerializer(new StringRedisSerializer());\rtemplate.setHashValueSerializer(serializer);\rtemplate.afterPropertiesSet();\rreturn template;\r}\r}\r 创建Junit测试实例进行Junit测试,Idea编译器中选中类名，control + shift + t快捷创建  import org.junit.Test;\rimport org.junit.runner.RunWith;\rimport org.slf4j.Logger;\rimport org.slf4j.LoggerFactory;\rimport org.springframework.beans.factory.annotation.Autowired;\rimport org.springframework.boot.test.context.SpringBootTest;\rimport org.springframework.data.redis.core.RedisTemplate;\rimport org.springframework.test.context.junit4.SpringRunner;\rimport java.util.concurrent.TimeUnit;\r@RunWith(SpringRunner.class)\r@SpringBootTest\rpublic class RedisConfigTest {\rprivate Logger log = LoggerFactory.getLogger(this.getClass());\r@Autowired\rprivate RedisTemplate redisTemplate;\r@Test\rpublic void redisTemplate() {\r// redis存储的键名\rString key = \u0026quot;number\u0026quot;;\r//如果不存在则设置值，存在的话则不设置\rredisTemplate.opsForValue().setIfAbsent(key, 1);\r//设置哈希值map值\rredisTemplate.opsForHash().put(\u0026quot;map\u0026quot;, \u0026quot;place\u0026quot;, \u0026quot;北京\u0026quot;);\r//获取到哈希值\rString place = (String) redisTemplate.opsForHash().get(\u0026quot;map\u0026quot;,\u0026quot;place\u0026quot;);\rlog.info(\u0026quot;[获取到的哈希值] - {}\u0026quot;,place);\r//进行值的增加和减少（需要为Integer）\rredisTemplate.opsForValue().increment(\u0026quot;number\u0026quot;,-10);\r//log中的“{}”为占位符\rString value = (String) redisTemplate.opsForValue().get(\u0026quot;school\u0026quot;);\rlog.info(\u0026quot;[redis中 获取到的值] - [{}]\u0026quot;,value);\r//设置有效时间为10秒的键值\rredisTemplate.opsForValue().set(\u0026quot;flag\u0026quot;,\u0026quot;10\u0026quot;,10, TimeUnit.SECONDS);\rString flag = (String) redisTemplate.opsForValue().get(\u0026quot;flag\u0026quot;);\rlog.info(\u0026quot;[获取到的有效时间为10秒的flag] - [{}]\u0026quot;,flag);\r}\r}\rRedis整合遇到的坑 问题一：\n SpringBoot整合Redis后连接Redsi出现超时问题  解决：\n 网上的redis的相关配置中都是spring.redis.timeout=0，超时时间不能设置为0，可以设置为5000（根据实际情况设置）。  问题二：\n 修改redis的conf文件后重启redis配置没有生效，一直报连接被主机中的软件中止。  org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。\r...\rCaused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。\rat sun.nio.ch.SocketDispatcher.read0(Native Method)\rat sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)\rat sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)\rat sun.nio.ch.IOUtil.read(IOUtil.java:192)\rat sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)\rat io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)\rat io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)\rat io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)\rat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\rat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\rat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\rat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\rat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\rat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\rat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\rat java.lang.Thread.run(Thread.java:748)\r解决：\n https://blog.csdn.net/Agly_Clarlie/article/details/52251746 在启动redis的时候，连同配置文件一起启动./redis-server redis.conf  ","id":2,"section":"posts","summary":"SpringBoot整合redis redis单机版 写在前面 选中代码块，按control + alt + t：快捷tryCatch 选中类名，按contro","tags":["markdown","text"],"title":"SpringBoot整合redis","uri":"https://PI-KA-CHU.github.io/2019/03/spring%E6%95%B4%E5%90%88redis/","year":"2019"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:\n  {{ if or .Params.math .Site.Params.math }} {{ partial \"math.html\" . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project's configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions Examples Inline math: \\( \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… \\)\nBlock math:\n\\[ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } \\]\n","id":3,"section":"posts","summary":"\u003cp\u003eMathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\u003c/p\u003e","tags":null,"title":"Math Typesetting","uri":"https://PI-KA-CHU.github.io/2019/03/math-typesetting/","year":"2019"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }","id":4,"section":"posts","summary":"\u003cp\u003eEmoji can be enabled in a Hugo project in a number of ways.\u003c/p\u003e","tags":["emoji"],"title":"Emoji Support","uri":"https://PI-KA-CHU.github.io/2019/03/emoji-support/","year":"2019"}],"tags":[{"title":"css","uri":"https://PI-KA-CHU.github.io/tags/css/"},{"title":"emoji","uri":"https://PI-KA-CHU.github.io/tags/emoji/"},{"title":"html","uri":"https://PI-KA-CHU.github.io/tags/html/"},{"title":"markdown","uri":"https://PI-KA-CHU.github.io/tags/markdown/"},{"title":"text","uri":"https://PI-KA-CHU.github.io/tags/text/"},{"title":"themes","uri":"https://PI-KA-CHU.github.io/tags/themes/"}]}